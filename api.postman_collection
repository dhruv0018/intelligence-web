{
	"id": "a986666f-c853-0902-2f9d-9800a54633e7",
	"name": "Intelligence API",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "9726d8cc-e370-79e2-1c0c-1688495ac762",
			"name": "Auth",
			"description": "",
			"order": [
				"52e66c63-9da0-37d8-3ccb-657d30509a9c",
				"25c0b60b-11b1-fdd3-b6e1-f90638432bd2"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "8a62cee8-e47d-780d-57a2-43db8b6a4c15",
			"name": "FilterSets",
			"description": "",
			"order": [
				"ec4a2f5f-8de1-3676-8445-5054e0b56dfa",
				"82cf0866-9d1f-2416-f225-0d14c418f8bd"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "cdd4de8a-d1ad-ab99-ae6f-10e7a92ac3a0",
			"name": "Games",
			"description": "",
			"order": [
				"c5980857-810f-1202-84be-03031e26f73d",
				"93e742eb-b148-36f0-925e-96efa25ec1b3",
				"1190d458-e23d-df51-53c5-9ee9eca45272",
				"69cb7ea8-b327-d617-b1aa-b31b8bc48334",
				"516627e1-99f3-c531-797d-ea585537cc2e"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "aeca7715-22b1-5d45-83d1-033238b321b7",
			"name": "Leagues",
			"description": "",
			"order": [
				"d00f202b-574e-bf86-d41d-9f6314a750b8",
				"49acc2c1-66ab-8a18-17b8-2b3936369083",
				"bb72a67f-8362-248e-6070-a4a122e4a24b",
				"484c9ada-36c2-b8af-9293-8231146fab5c",
				"e694952f-d019-f211-a976-333401f477bb"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "ce95d10c-c325-6e4e-a3f7-c058770f7b50",
			"name": "Plans",
			"description": "",
			"order": [
				"772a11e5-6bff-a99c-a638-b282df9aa11f",
				"a99c9759-3703-d756-80ec-8976f3a810fb",
				"3941ef3c-59b2-9d26-2e68-9939ea8907a1",
				"5e6b96a8-c7fb-8d1c-735e-eff646608d48"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "0a822ba4-0812-18fd-a51d-a1f4377dde85",
			"name": "Players",
			"description": "",
			"order": [
				"4dbcbdcc-93f8-0de3-6145-0204faa32d52",
				"06c54cd9-4f1c-d309-8b77-13eeb611b8ff",
				"04620ab7-d190-5a8c-5d7a-5a79f0e90082",
				"7f51db11-dbf0-2304-9dd7-793a30fc9549",
				"2ff4e417-db15-158d-8283-cea533e83c86"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "42dddec8-f46c-cf09-358f-2de91338dd05",
			"name": "Plays",
			"description": "",
			"order": [
				"9cec257b-7c5c-ad4f-b69b-5e0d70d77cb0",
				"1d2da00a-71ec-cb0b-1bee-cfcb10b47a24",
				"e6217d79-5a03-131f-f0d8-2f2c56d3781a",
				"40616a6b-117e-b06a-430a-5dfa046b73bf"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "2740dce0-dbd1-7ec6-3050-a1a92d8131f4",
			"name": "PositionSets",
			"description": "",
			"order": [
				"8bb56284-16f8-9770-77d7-33b0871a7543",
				"778ede95-caca-1a99-bb84-b06e8ff6f767"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "a624fd91-7943-ce16-5225-9c7b7e8228e3",
			"name": "Schools",
			"description": "",
			"order": [
				"2e26292a-4bc8-3a42-7623-8881a0d10c40",
				"eedc99b9-d0b2-9c4e-15be-1a93dcc3c24b",
				"a8f80424-bcc1-0d48-34e9-aefd879d1e47",
				"65687edb-ea41-ecff-c6ef-eba3b53a02ad"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "96493c0f-1496-7795-a832-ba49038eeebf",
			"name": "Sports",
			"description": "",
			"order": [
				"93cb83b9-614e-a548-b369-47deff24bcad",
				"5272f356-2492-9d2b-847d-0a2f09c0f497"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "705c596d-3ca1-b8f0-b3d7-f9077ecb9d5a",
			"name": "TagSets",
			"description": "",
			"order": [
				"3b66ed08-1897-744e-ba69-e136836fd4da",
				"b97fc61c-0854-ab11-8ac3-d8958a25d768"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "b8743bd3-6361-9f6f-4dc4-ffb8026679f3",
			"name": "Teams",
			"description": "",
			"order": [
				"5525b345-27e2-fc9e-94fc-9deb2c95637d",
				"04dd511b-3996-8273-62a1-2a60c9e0a9b0",
				"53f90fa9-e573-d9f0-63e9-b70d12c8c8d2",
				"7a25b55a-cf28-c8b8-4f7a-2b310abab285",
				"1f0d63cf-4317-e88b-bc5f-f9d5f13ac2a2"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		},
		{
			"id": "9abe75fe-5263-cd69-0ac1-d367ae06d537",
			"name": "Users",
			"description": "",
			"order": [
				"413f6d38-fc69-e13c-421c-0f690838a984",
				"290e9100-fc72-6d9f-e8a2-31f24b8f581c",
				"31156cb4-29e3-f252-9abf-deefecb4da5c",
				"9ea9150a-eb07-0484-938c-bd4e85b1f3d9",
				"d94e27d1-49c8-77e2-2f34-7021b0aa35ad"
			],
			"collection_name": "Intelligence API",
			"collection_id": "a986666f-c853-0902-2f9d-9800a54633e7"
		}
	],
	"timestamp": 1393523475382,
	"synced": false,
	"remoteLink": "https://www.getpostman.com/collections/338ecdbe7d5b1344a332",
	"requests": [
		{
			"id": "04620ab7-d190-5a8c-5d7a-5a79f0e90082",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/players",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var playerSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Player Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"firstName\": {\n            \"type\": \"string\"\n        },\n        \"lastName\": {\n            \"type\": \"string\"\n        },\n        \"userId\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"isUnknown\": {\n            \"type\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar players = JSON.parse(responseBody);\n\ntests[\"Players conform to schema\"] = players.every(function(player) {\n\n\n    return tv4.validate(player, playerSchema);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421586387749,
			"name": "Query",
			"description": "Endpoint used to get all players.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "04dd511b-3996-8273-62a1-2a60c9e0a9b0",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/teams/{{teamId}}",
			"preRequestScript": "var teamId = postman.getEnvironmentVariable(\"teamId\");\nif (!teamId) postman.setEnvironmentVariable(\"teamId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var team = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"teamId\", team.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438921611,
			"name": "Get",
			"description": "Retrieve a single team object.\n\n_{{teamId}}_ is a team ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "06c54cd9-4f1c-d309-8b77-13eeb611b8ff",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/players/{{playerId}}",
			"preRequestScript": "var playerId = postman.getEnvironmentVariable(\"playerId\");\nif (!playerId) postman.setEnvironmentVariable(\"playerId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var player = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"playerId\", player.id);\n\nvar playerSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Player Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"firstName\": {\n            \"type\": \"string\"\n        },\n        \"lastName\": {\n            \"type\": \"string\"\n        },\n        \"userId\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"isUnknown\": {\n            \"type\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar player = JSON.parse(responseBody);\n\ntests[\"Player conforms to schema\"] = tv4.validate(player, playerSchema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421585337204,
			"name": "Get",
			"description": "Endpoint used to retrieve a single player based on ID.\n\n- **{{playerId}}** _{Integer}_ the ID of the player to get.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "1190d458-e23d-df51-53c5-9ee9eca45272",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/games",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1393559983170,
			"name": "Query",
			"description": "Endpoint used to get all games and to search for games using Query String filters.  If no filters are passed, it will return an array of all games.  Start and Count  are used to control how many results are returned and from what offset.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "1d2da00a-71ec-cb0b-1bee-cfcb10b47a24",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/plays/{{playId}}",
			"preRequestScript": "var playId = postman.getEnvironmentVariable(\"playId\");\nif (!playId) postman.setEnvironmentVariable(\"playId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var play = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"playId\", play.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420430245105,
			"name": "Get",
			"description": "Retrieve a single play object.\n\n_{{playId}}_ is a play ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "1f0d63cf-4317-e88b-bc5f-f9d5f13ac2a2",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/teams/{{teamId}}",
			"preRequestScript": "var teamId = postman.getEnvironmentVariable(\"teamId\");\nif (!teamId) postman.setEnvironmentVariable(\"teamId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439161404,
			"name": "Update",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"name\":\"Golden Shield\",\"schoolId\":1,\"address\":{\"id\":1,\"street1\":\"1400 Barry Downe Rd\",\"city\":\"Greater Sudbury\",\"regionCode\":\"ON\",\"postalCode\":\"P3A 3V8\",\"countryCode\":\"CN\"},\"roles\":[{\"userId\":5295,\"type\":4,\"teamId\":1,\"tenureStart\":\"2014-09-17T09:39:56+00:00\",\"isDefault\":false,\"createdAt\":\"2014-09-17T09:39:59+00:00\"},{\"userId\":5501,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-09-19T13:39:45+00:00\"},{\"userId\":5500,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-09-19T13:37:59+00:00\"},{\"userId\":5884,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:28:15+00:00\"},{\"userId\":5883,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:27:37+00:00\"},{\"userId\":5887,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:30:43+00:00\"},{\"userId\":5888,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:31:03+00:00\"},{\"userId\":5889,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:31:50+00:00\"},{\"userId\":5891,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:33:04+00:00\"},{\"userId\":5885,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:29:27+00:00\"},{\"userId\":5892,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:33:28+00:00\"},{\"userId\":5890,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:32:23+00:00\"},{\"userId\":5882,\"type\":7,\"teamId\":1,\"isDefault\":true,\"createdAt\":\"2014-10-09T11:26:58+00:00\"},{\"userId\":5893,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:33:58+00:00\"},{\"userId\":12,\"type\":3,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-07-14T06:07:57+00:00\"},{\"userId\":5886,\"type\":7,\"teamId\":1,\"isDefault\":false,\"createdAt\":\"2014-10-09T11:30:00+00:00\"}],\"teamPlans\":[{\"startDate\":\"2014-07-15T00:00:00+00:00\",\"endDate\":\"2014-07-15T23:59:59+00:00\",\"id\":2,\"name\":\"\",\"maxGamesPerPlan\":0,\"maxAnyGames\":0,\"maxTurnaroundTime\":0,\"price\":0},{\"startDate\":\"2014-08-01T00:00:00+00:00\",\"endDate\":\"2015-03-01T00:00:00+00:00\",\"id\":312,\"name\":\"Champion\",\"maxGamesPerPlan\":84,\"maxAnyGames\":3,\"maxTurnaroundTime\":36,\"price\":0}],\"teamPackages\":[{\"id\":595,\"maxGamesPerPackage\":5,\"maxTurnaroundTime\":48,\"startDate\":\"2014-07-15T00:00:00+00:00\",\"endDate\":\"2014-08-12T23:59:59+00:00\"}],\"leagueId\":5,\"isCustomerTeam\":true,\"roster\":{\"id\":1,\"teamId\":1,\"playerInfo\":{\"34326\":{\"jerseyNumber\":\"1\",\"isActive\":true,\"positionIds\":[2]},\"34327\":{\"jerseyNumber\":\"14\",\"isActive\":true,\"positionIds\":[1]},\"46528\":{\"jerseyNumber\":\"2\",\"isActive\":true,\"positionIds\":[3]},\"46529\":{\"jerseyNumber\":\"3\",\"isActive\":true,\"positionIds\":[5]},\"46530\":{\"jerseyNumber\":\"4\",\"isActive\":true,\"positionIds\":[3]},\"46531\":{\"jerseyNumber\":\"5\",\"isActive\":true,\"positionIds\":[5]},\"46532\":{\"jerseyNumber\":\"6\",\"isActive\":true,\"positionIds\":[2]},\"46533\":{\"jerseyNumber\":\"7\",\"isActive\":true,\"positionIds\":[5]},\"46534\":{\"jerseyNumber\":\"8\",\"isActive\":true,\"positionIds\":[1]},\"46535\":{\"jerseyNumber\":\"9\",\"isActive\":true,\"positionIds\":[5]},\"46536\":{\"jerseyNumber\":\"10\",\"isActive\":true,\"positionIds\":[6]},\"46537\":{\"jerseyNumber\":\"12\",\"isActive\":true,\"positionIds\":[1]},\"46538\":{\"jerseyNumber\":\"15\",\"isActive\":true,\"positionIds\":[3]},\"46539\":{\"jerseyNumber\":\"16\",\"isActive\":true,\"positionIds\":[5]}}}}"
		},
		{
			"id": "25c0b60b-11b1-fdd3-b6e1-f90638432bd2",
			"headers": "Content-Type: application/x-www-form-urlencoded\nAuthorization: Basic Y2lkOmNzZWNyZXQ=\n",
			"url": "{{url}}/oauth/token",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "authorization_code",
					"type": "text"
				},
				{
					"key": "code",
					"value": "{{code}}",
					"type": "text"
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"access_token\", data.access_token);\npostman.setEnvironmentVariable(\"refresh_token\", data.refresh_token);",
			"time": 1393518539655,
			"name": "Token",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "290e9100-fc72-6d9f-e8a2-31f24b8f581c",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/users/{{userId}}",
			"preRequestScript": "var userId = postman.getEnvironmentVariable(\"userId\");\nif (!userId) postman.setEnvironmentVariable(\"userId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var user = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"userId\", user.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439428456,
			"name": "Get",
			"description": "Endpoint used to retrieve a single user based on ID.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "2e26292a-4bc8-3a42-7623-8881a0d10c40",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/schools",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var school = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"schoolId\", school.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438443982,
			"name": "Create",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"name\":\"*Cambrian College\",\"address\":{\"id\":1,\"street1\":\"1400 Barry Downe Rd\",\"street2\":null,\"city\":\"Greater Sudbury\",\"regionCode\":\"ON\",\"postalCode\":\"P3A 3V8\",\"countryCode\":\"CN\"},\"conference\":null,\"division\":null,\"mascot\":\"Golden Shield\",\"type\":1,\"county\":null,\"phone\":null,\"ncesId\":null,\"ipedsId\":null,\"maxGrade\":null,\"minGrade\":null,\"closeIoLeadId\":null,\"isPublic\":0}"
		},
		{
			"id": "2ff4e417-db15-158d-8283-cea533e83c86",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/players/{{playerId}}",
			"preRequestScript": "var playerId = postman.getEnvironmentVariable(\"playerId\");\nif (!playerId) postman.setEnvironmentVariable(\"playerId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421587875845,
			"name": "Update",
			"description": "Update an existing player.\n\n- **{{playerId}}** _{Integer}_ the ID of the player to update.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"firstName\":\"Lauren\",\"lastName\":\"Reminga\",\"userId\":null,\"isUnknown\":false}"
		},
		{
			"id": "31156cb4-29e3-f252-9abf-deefecb4da5c",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/users",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1393560073098,
			"name": "Query",
			"description": "Endpoint used to get all users and to search for users using Query String filters.  If no filters are passed, it will return an array of all users.  Start and Count  are used to control how many results are returned and from what offset.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "3941ef3c-59b2-9d26-2e68-9939ea8907a1",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/plans",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var plan = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"planId\", plan.id);\n\nvar planSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Plan Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"leagueIds\": {\n            \"type\": \"array\",\n            \"items\": \"integer\"\n        },\n        \"startDay\": {\n            \"type\": \"integer\"\n        },\n        \"startMonth\": {\n            \"type\": \"integer\"\n        },\n        \"endDay\": {\n            \"type\": \"integer\"\n        },\n        \"endMonth\": {\n            \"type\": \"integer\"\n        },\n        \"maxGamesPerPlan\": {\n            \"type\": \"integer\"\n        },\n        \"maxAnyGames\": {\n            \"type\": \"integer\"\n        },\n        \"maxTurnaroundTime\": {\n            \"type\": \"integer\"\n        },\n        \"price\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar plans = JSON.parse(responseBody);\n\ntests[\"Plans conform to schema\"] = plans.every(function(plan) {\n\n\n    return tv4.validate(plan, planSchema);\n});",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421584060104,
			"name": "Query",
			"description": "Endpoint used to get all plans.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "3b66ed08-1897-744e-ba69-e136836fd4da",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/tag-sets/{{tagsetId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"name": "Get",
			"description": "Retrieve a single tag set object.",
			"descriptionFormat": "html",
			"time": 1400172521366,
			"version": 2,
			"responses": [],
			"tests": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"synced": false
		},
		{
			"id": "40616a6b-117e-b06a-430a-5dfa046b73bf",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/plays/{{playId}}",
			"preRequestScript": "var playId = postman.getEnvironmentVariable(\"playId\");\nif (!playId) postman.setEnvironmentVariable(\"playId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420430281823,
			"name": "Update",
			"description": "Update an existing play object.\n\n_{playId}_ is a play ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"startTime\":87,\"endTime\":87,\"events\":[{\"id\":1,\"time\":87,\"tagId\":16,\"playId\":1,\"variableValues\":{\"7\":{\"id\":7,\"type\":null,\"index\":1,\"value\":\"1\"}}}],\"gameId\":1,\"flags\":[],\"clip\":null,\"shares\":[]}"
		},
		{
			"id": "413f6d38-fc69-e13c-421c-0f690838a984",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/users",
			"preRequestScript": "var email = postman.getEnvironmentVariable(\"email\");\nif (!email) postman.setEnvironmentVariable(\"email\", 'test@krossover.com');\n\nvar firstName = postman.getEnvironmentVariable(\"firstName\");\nif (!firstName) postman.setEnvironmentVariable(\"firstName\", '');\n\nvar lastName = postman.getEnvironmentVariable(\"lastName\");\nif (!lastName) postman.setEnvironmentVariable(\"lastName\", '');",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"userId\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439643827,
			"name": "Create",
			"description": "Add a new user",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"email\": \"{{email}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\"\n} "
		},
		{
			"id": "484c9ada-36c2-b8af-9293-8231146fab5c",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/leagues?start={{start}}&count={{count}}&name={{name}}&gender={{gender}}&sportId={{sportId}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar name = postman.getEnvironmentVariable(\"name\");\nif (!name) postman.setEnvironmentVariable(\"name\", '');\n\nvar gender = postman.getEnvironmentVariable(\"gender\");\nif (!gender) postman.setEnvironmentVariable(\"gender\", 'male');\n\nvar sportId = postman.getEnvironmentVariable(\"sportId\");\nif (!sportId) postman.setEnvironmentVariable(\"sportId\", 1);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420428486156,
			"name": "Filter",
			"description": "- **{{start}}** _{Integer}_ offset to start results from\n\n- **{{count}}** _{Integer}_ number of results\n\n- **{{name}}** _{String}_ league name\n\n- **{{gender}}** _{String}_ `'male'` or `'female'`\n\n- **{{sportId}}** _{Integer}_ sport ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "49acc2c1-66ab-8a18-17b8-2b3936369083",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/leagues/{{leagueId}}",
			"preRequestScript": "var leagueId = postman.getEnvironmentVariable(\"leagueId\");\nif (!leagueId) postman.setEnvironmentVariable(\"leagueId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var league = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"leagueId\", league.id);\n\nvar leagueSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"League Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"sportId\": {\n            \"type\": \"integer\"\n        },\n        \"gender\": {\n            \"type\": \"string\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ]\n        },\n        \"seasonStartMonth\": {\n            \"type\": \"integer\"\n        },\n        \"seasonStartDay\": {\n            \"type\": \"integer\"\n        },\n        \"seasonEndMonth\": {\n            \"type\": \"integer\"\n        },\n        \"seasonEndDay\": {\n            \"type\": \"integer\"\n        },\n        \"seasons\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"season\" }\n        },\n        \"tagSetId\": {\n            \"type\": \"integer\"\n        },\n        \"numberOfPeriods\": {\n            \"type\": \"integer\"\n        },\n        \"periodLabel\": {\n            \"type\": \"string\"\n        },\n        \"periodAbbreviationLabel\": {\n            \"type\": \"string\"\n        },\n        \"positionSetId\": {\n            \"type\": \"integer\"\n        },\n        \"flagRuleSetId\": {\n            \"type\": \"integer\"\n        },\n        \"filterSetId\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar seasonSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Season Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"leagueId\": {\n            \"type\": \"integer\"\n        },\n        \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\ntv4.addSchema('season', seasonSchema);\n          \ntv4.addFormat('date-time', function(data, schema) {\n\n    var ISO8601 = /[0-9]{4,}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+|)(?:[+-][0-9]{2}:[0-9]{2}|Z)/;\n\n    if (ISO8601.test(data) && !isNaN(Date.parse(data))) return null;\n\n    else return 'A valid ISO 8601 date/time string expected';\n});\n\n\nvar league = JSON.parse(responseBody);\n\ntests[\"League conforms to schema\"] = tv4.validate(league, leagueSchema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421556099841,
			"name": "Get",
			"description": "Endpoint used to retrieve a single league based on ID.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "4dbcbdcc-93f8-0de3-6145-0204faa32d52",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/players",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var plan = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"planId\", plan.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421586792133,
			"name": "Create",
			"description": "Add a new player.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"firstName\":\"\",\n  \"lastName\":\"\",\n  \"userId\":null,\n  \"isUnknown\":false\n}"
		},
		{
			"id": "516627e1-99f3-c531-797d-ea585537cc2e",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/games/{{gameId}}",
			"preRequestScript": "var gameId = postman.getEnvironmentVariable(\"gameId\");\nif (!gameId) postman.setEnvironmentVariable(\"gameId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420427581883,
			"name": "Update",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"datePlayed\":\"2013-11-15T23:00:00+00:00\",\"gameType\":1,\"isHomeGame\":false,\"teamId\":2,\"opposingTeamId\":3,\"primaryJerseyColor\":\"#ffff00\",\"opposingPrimaryJerseyColor\":\"#804040\",\"opposingSecondaryJerseyColor\":\"#ffffff\",\"finalScore\":2,\"opposingFinalScore\":3,\"rosters\":{\"2\":{\"id\":4,\"gameId\":1,\"teamId\":2,\"playerInfo\":{\"1\":{\"jerseyNumber\":\"6\",\"isActive\":true,\"positionIds\":[6]},\"2\":{\"jerseyNumber\":\"17\",\"isActive\":false,\"positionIds\":[2,7]},\"3\":{\"jerseyNumber\":\"20\",\"isActive\":true,\"positionIds\":[4]},\"4\":{\"jerseyNumber\":\"15\",\"isActive\":false,\"positionIds\":[1]},\"5\":{\"jerseyNumber\":\"14\",\"isActive\":false,\"positionIds\":[5]},\"6\":{\"jerseyNumber\":\"10\",\"isActive\":false,\"positionIds\":[4,5,6]},\"7\":{\"jerseyNumber\":\"19\",\"isActive\":true,\"positionIds\":[5]},\"8\":{\"jerseyNumber\":\"7\",\"isActive\":false,\"positionIds\":[4,5]},\"9\":{\"jerseyNumber\":\"2\",\"isActive\":true,\"positionIds\":[1]},\"10\":{\"jerseyNumber\":\"9\",\"isActive\":true,\"positionIds\":[4,5]},\"11\":{\"jerseyNumber\":\"16\",\"isActive\":false,\"positionIds\":[1]},\"12\":{\"jerseyNumber\":\"5\",\"isActive\":true,\"positionIds\":[1]},\"13\":{\"jerseyNumber\":\"4\",\"isActive\":true,\"positionIds\":[2]},\"14\":{\"jerseyNumber\":\"18\",\"isActive\":false,\"positionIds\":[2,7]},\"15\":{\"jerseyNumber\":\"11\",\"isActive\":true,\"positionIds\":[4]},\"16\":{\"jerseyNumber\":\"3\",\"isActive\":true,\"positionIds\":[2,7]},\"17\":{\"jerseyNumber\":\"1\",\"isActive\":false,\"positionIds\":[6]},\"18\":{\"jerseyNumber\":\"12\",\"isActive\":true,\"positionIds\":[6]},\"19\":{\"jerseyNumber\":\"\",\"isActive\":true}}},\"3\":{\"id\":5,\"gameId\":1,\"teamId\":3,\"playerInfo\":{\"20\":{\"jerseyNumber\":\"\",\"isActive\":true},\"21\":{\"jerseyNumber\":\"1\",\"isActive\":true},\"22\":{\"jerseyNumber\":\"4\",\"isActive\":true},\"23\":{\"jerseyNumber\":\"6\",\"isActive\":true},\"24\":{\"jerseyNumber\":\"10\",\"isActive\":true},\"25\":{\"jerseyNumber\":\"11\",\"isActive\":true},\"26\":{\"jerseyNumber\":\"17\",\"isActive\":true},\"27\":{\"jerseyNumber\":\"8\",\"isActive\":true},\"28\":{\"jerseyNumber\":\"14\",\"isActive\":true},\"29\":{\"jerseyNumber\":\"18\",\"isActive\":true},\"30\":{\"jerseyNumber\":\"22\",\"isActive\":true},\"31\":{\"jerseyNumber\":\"24\",\"isActive\":true}}}},\"video\":{\"id\":1,\"guid\":\"ec2-54-90-109-171.compute-1.amazonaws.com53c478d27cfac\",\"status\":4,\"videoTranscodeProfiles\":[{\"id\":7,\"videoId\":1,\"transcodeProfile\":{\"id\":1,\"targetBitrate\":600,\"maximumBitrate\":800,\"minimumBitrate\":0,\"description\":\"SD Low Resolution (360p)\",\"targetDisplayWidth\":640,\"targetDisplayHeight\":360,\"aspectRatio\":\"16:9\"},\"status\":4,\"videoUrl\":\"http:\\/\\/krossover-com-prod-content.cdn.krossover.com\\/videos\\/finished\\/ec2-54-90-109-171.compute-1.amazonaws.com53c478d27cfac_600.mp4\"},{\"id\":8,\"videoId\":1,\"transcodeProfile\":{\"id\":2,\"targetBitrate\":1600,\"maximumBitrate\":1900,\"minimumBitrate\":1000,\"description\":\"SD High Resolution (480p)\",\"targetDisplayWidth\":848,\"targetDisplayHeight\":480,\"aspectRatio\":\"16:9\"},\"status\":4,\"videoUrl\":\"http:\\/\\/krossover-com-prod-content.cdn.krossover.com\\/videos\\/finished\\/ec2-54-90-109-171.compute-1.amazonaws.com53c478d27cfac_1600.mp4\"},{\"id\":9,\"videoId\":1,\"transcodeProfile\":{\"id\":3,\"targetBitrate\":3500,\"maximumBitrate\":5000,\"minimumBitrate\":2400,\"description\":\"HD Resolution (720p)\",\"targetDisplayWidth\":1280,\"targetDisplayHeight\":720,\"aspectRatio\":\"16:9\"},\"status\":4,\"videoUrl\":\"http:\\/\\/krossover-com-prod-content.cdn.krossover.com\\/videos\\/finished\\/ec2-54-90-109-171.compute-1.amazonaws.com53c478d27cfac_3500.mp4\"}],\"duration\":7500,\"thumbnail\":\"http:\\/\\/krossover-com-prod-content.cdn.krossover.com\\/images\\/thumbnails\\/ec2-54-90-109-171.compute-1.amazonaws.com53c478d27cfac_3500.jpg\"},\"status\":7,\"indexerAssignments\":[{\"id\":1,\"gameId\":1,\"userId\":5,\"timeAssigned\":\"2014-07-15T08:09:10+00:00\",\"timeStarted\":\"2014-07-15T08:09:28+00:00\",\"timeFinished\":\"2014-07-16T08:42:44+00:00\",\"deadline\":\"2014-07-17T08:09:08+00:00\",\"isQa\":false},{\"id\":5,\"gameId\":1,\"userId\":5,\"timeAssigned\":\"2014-07-16T08:52:33+00:00\",\"timeStarted\":\"2014-07-16T08:52:45+00:00\",\"timeFinished\":\"2014-07-16T11:09:54+00:00\",\"deadline\":\"2014-07-18T08:52:31+00:00\",\"isQa\":true}],\"isDeleted\":false,\"uploaderUserId\":13,\"uploaderTeamId\":2,\"createdAt\":\"2014-07-14T20:54:45+00:00\",\"isClone\":false,\"notes\":{\"1\":[{\"id\":1,\"noteTypeId\":1,\"gameId\":1,\"content\":\"Our starting Setter for this match was #2- Kyana Miller. Our other Setter for this match (we ran a 6-2 offense) was #5- Aimee Schubert.\",\"gameTime\":null}],\"2\":[{\"id\":4,\"noteTypeId\":2,\"gameId\":1,\"content\":\"College of Charleston #5 not listed on roster.\",\"gameTime\":2400},{\"id\":7,\"noteTypeId\":2,\"gameId\":1,\"content\":\"College of Charleston #3 not listed on roster.\",\"gameTime\":7200},{\"id\":8,\"noteTypeId\":2,\"gameId\":1,\"content\":\"Injury occurs here. The play is whistled dead.\",\"gameTime\":7500},{\"id\":9,\"noteTypeId\":2,\"gameId\":1,\"content\":\"Gap in film\",\"gameTime\":7500},{\"id\":10,\"noteTypeId\":2,\"gameId\":1,\"content\":\"The game film ends in the middle of 5th set.\",\"gameTime\":7500}]}}"
		},
		{
			"id": "5272f356-2492-9d2b-847d-0a2f09c0f497",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/sports",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1393560567048,
			"name": "Query",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "52e66c63-9da0-37d8-3ccb-657d30509a9c",
			"headers": "",
			"url": "{{url}}/oauth/authorize?response_type=code&client_id=cid&state=xyz",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "authorized",
					"value": "yes",
					"type": "text"
				},
				{
					"key": "username",
					"value": "{{username}}",
					"type": "text"
				},
				{
					"key": "password",
					"value": "{{password}}",
					"type": "text"
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"code\", data.code);",
			"time": 1393513890505,
			"name": "Authorize",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "53f90fa9-e573-d9f0-63e9-b70d12c8c8d2",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/teams",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438887778,
			"name": "Query",
			"description": "Get all teams.\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "5525b345-27e2-fc9e-94fc-9deb2c95637d",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/teams",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"teamId\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439083340,
			"name": "Create",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"name\":\"Golden Shield\",\"leagueId\":1,\"schoolId\":1,\"address\":{\"street1\":\"1400 Barry Downe Rd\",\"city\":\"Greater Sudbury\",\"regionCode\":\"ON\",\"postalCode\":\"P3A 3V8\",\"countryCode\":\"CN\"}}"
		},
		{
			"id": "5e6b96a8-c7fb-8d1c-735e-eff646608d48",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/plans/{{planId}}",
			"preRequestScript": "var planId = postman.getEnvironmentVariable(\"planId\");\nif (!planId) postman.setEnvironmentVariable(\"planId\", 5);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420428941495,
			"name": "Update",
			"description": "Update an existing plan object.\n\n- **{{planId}}** _{Integer}_ the ID of the default plan to update.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"leagueIds\":[1,2,5,6,9,7],\"startDay\":1,\"startMonth\":7,\"endDay\":1,\"endMonth\":1,\"id\":5,\"name\":\"Franchise\",\"maxGamesPerPlan\":20,\"maxAnyGames\":2,\"maxTurnaroundTime\":48,\"price\":0}"
		},
		{
			"id": "65687edb-ea41-ecff-c6ef-eba3b53a02ad",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/schools?start={{start}}&count={{count}}&name={{schoolName}}&conference={{conferenceName}}&city={{cityName}}&region={{regionName}}&country={{countryName}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar schoolName = postman.getEnvironmentVariable(\"schoolName\");\nif (!schoolName) postman.setEnvironmentVariable(\"schoolName\", '');\n\nvar conferenceName = postman.getEnvironmentVariable(\"conferenceName\");\nif (!conferenceName) postman.setEnvironmentVariable(\"conferenceName\", '');\n\nvar cityName = postman.getEnvironmentVariable(\"cityName\");\nif (!cityName) postman.setEnvironmentVariable(\"cityName\", '');\n\nvar regionName = postman.getEnvironmentVariable(\"regionName\");\nif (!regionName) postman.setEnvironmentVariable(\"regionName\", '');\n\nvar countryName = postman.getEnvironmentVariable(\"countryName\");\nif (!countryName) postman.setEnvironmentVariable(\"countryName\", '');\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438656086,
			"name": "Filter",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "69cb7ea8-b327-d617-b1aa-b31b8bc48334",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/games?start={{start}}&count={{count}}&sport={{sportId}}&status={{statusId}}&team={{teamName}}&coachFirstName={{coachFirstName}}&coachLastName={{coachLastName}}&indexerFirstName={{indexerFirstName}}&indexerLastName={{indexerLastName}}&qaFirstName={{qaFirstName}}&qaLastName={{qaLastName}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar sportId = postman.getEnvironmentVariable(\"sportId\");\nif (!sportId) postman.setEnvironmentVariable(\"sportId\", 1);\n\nvar statusId = postman.getEnvironmentVariable(\"statusId\");\nif (!statusId) postman.setEnvironmentVariable(\"statusId\", 1);\n\nvar teamName = postman.getEnvironmentVariable(\"teamName\");\nif (!teamName) postman.setEnvironmentVariable(\"teamName\", '');\n\nvar coachFirstName = postman.getEnvironmentVariable(\"coachFirstName\");\nif (!coachFirstName) postman.setEnvironmentVariable(\"coachFirstName\", '');\n\nvar coachLastName = postman.getEnvironmentVariable(\"coachLastName\");\nif (!coachLastName) postman.setEnvironmentVariable(\"coachLastName\", '');\n\nvar indexerFirstName = postman.getEnvironmentVariable(\"indexerFirstName\");\nif (!indexerFirstName) postman.setEnvironmentVariable(\"indexerFirstName\", '');\n\nvar indexerLastName = postman.getEnvironmentVariable(\"indexerLastName\");\nif (!indexerLastName) postman.setEnvironmentVariable(\"indexerLastName\", '');\n\nvar qaFirstName = postman.getEnvironmentVariable(\"qaFirstName\");\nif (!qaFirstName) postman.setEnvironmentVariable(\"qaFirstName\", '');\n\nvar qaLastName = postman.getEnvironmentVariable(\"qaLastName\");\nif (!qaLastName) postman.setEnvironmentVariable(\"qaLastName\", '');",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420423250205,
			"name": "Filter",
			"description": "- **{{start}}** _{Integer}_ offset to start results from\n\n- **{{count}}** _{Integer}_ number of results\n\n- **{{status}}** _{Integer}_ game status\n\t0. Not indexed\n\t1. Indexing, not started\n\t2. Indexing, in progress\n    3. QA, not started\n    4. QA, in progress\n    5. Set Aside\n    6. Indexed\n    7. Finalized\n\n- **{{gameType}}** _{Integer|Array.<Integer>}_ game type\n\t1. Conference\n    2. Non-conference\n    3. Playoff\n    4. Scouting\n    5. Scrimmage\n\n- **{{rosterId}}** _{Integer}_ roster ID\n\n- **{{team}}** _{String}_ team name\n\n- **{{teamId}}** _{Integer}_ team ID\n\n- **{{sportId}}** _{Integer}_ sport ID\n\n- **{{coachFirstName}}** _{String}_ coach first name\n\n- **{{coachLastName}}** _{String}_ coach last name\n\n- **{{indexerFirstName}}** _{String}_ indexer first name\n\n- **{{indexerLastName}}** _{String}_ indexer last name\n\n- **{{qaFirstName}}** _{String}_ QA first name\n\n- **{{qaLastName}}** _{String}_ QA last name\n\n- **{{assignedUserId}}** _{Integer}_ user ID assigned to game\n\n- **{{uploaderUserId}}** _{Integer}_ user ID who uploaded the game\n\n- **{{uploaderTeamId}}** _{Integer}_ team ID which uploaded the game\n\n- **{{reelId}}** _{Integer}_ reel ID game appears in\n\n- **{{videoStatus}}** _{Integer}_ video status\n\t1. Incomplete\n    2. Uploaded\n    3. Complete\n    4. Failed\n\n- **{{createdAt}}** _{String}_ date game was created\n\n- **{{isClone}}** _{Boolean}_ is game cloned\n\n- **{{sharedWithUserId}}** _{Integer}_ user ID who the game is shared with\n\n- **{{sharedWithTeamId}}** _{Integer}_ team ID which the game is shared with\n\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "772a11e5-6bff-a99c-a638-b282df9aa11f",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/plans",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var plan = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"planId\", plan.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420428647345,
			"name": "Create",
			"description": "Add a new default plan.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"name\": \"\",\n  \"maxGamesPerPlan\": 0,\n  \"maxAnyGames\": 0,\n  \"maxTurnaroundTime\": 0,\n  \"price\": \"float\",\n  \"leagueIds\": [\n    1\n  ],\n  \"startDay\": 0,\n  \"startMonth\": 0,\n  \"endDay\": 0,\n  \"endMonth\": 0\n}"
		},
		{
			"id": "778ede95-caca-1a99-bb84-b06e8ff6f767",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/position-sets",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var positionSetSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"PositionSet Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"positions\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"position\" }\n        }\n    },\n    \"additionalProperties\": false\n};\n\nvar positionSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Position Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"description\": {\n            \"type\": \"string\"\n        },\n        \"positionSetId\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\ntv4.addSchema('position', positionSchema);\n\nvar positionsets = JSON.parse(responseBody);\n\ntests[\"Position-Sets conform to schema\"] = positionsets.every(function(positionset) {\n\n    return tv4.validate(positionset, positionSetSchema);\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420397309477,
			"name": "Query",
			"description": "Get all availabe position sets.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "7a25b55a-cf28-c8b8-4f7a-2b310abab285",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/leagues?start={{start}}&count={{count}}&name={{name}}&sport={{sportId}}&school={{schoolId}}&schoolName={{schoolName}}&league={{leagueId}}&leagueName={{leagueName}}&roster={{rosterId}}&noRoleType={{noRoleTypeId}}&noRoleUser={{noRoleUserId}}&teamIds={{teamIds}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar name = postman.getEnvironmentVariable(\"name\");\nif (!name) postman.setEnvironmentVariable(\"name\", '');\n\nvar sportId = postman.getEnvironmentVariable(\"sportId\");\nif (!sportId) postman.setEnvironmentVariable(\"sportId\", 1);\n\nvar schoolId = postman.getEnvironmentVariable(\"schoolId\");\nif (!schoolId) postman.setEnvironmentVariable(\"schoolId\", 1);\n\nvar schoolName = postman.getEnvironmentVariable(\"schoolName\");\nif (!schoolName) postman.setEnvironmentVariable(\"schoolName\", '');\n\nvar leagueId = postman.getEnvironmentVariable(\"leagueId\");\nif (!leagueId) postman.setEnvironmentVariable(\"leagueId\", 1);\n\nvar leagueName = postman.getEnvironmentVariable(\"leagueName\");\nif (!leagueName) postman.setEnvironmentVariable(\"leagueName\", '');\n\nvar rosterId = postman.getEnvironmentVariable(\"rosterId\");\nif (!rosterId) postman.setEnvironmentVariable(\"rosterId\", 1);\n\nvar noRoleTypeId = postman.getEnvironmentVariable(\"noRoleTypeId\");\nif (!noRoleTypeId) postman.setEnvironmentVariable(\"noRoleTypeId\", 1);\n\nvar noRoleUserId = postman.getEnvironmentVariable(\"noRoleUserId\");\nif (!noRoleUserId) postman.setEnvironmentVariable(\"noRoleUserId\", 1);\n\nvar teamIds = postman.getEnvironmentVariable(\"teamIds\");\nif (!teamIds) postman.setEnvironmentVariable(\"teamIds\", [1]);\n\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439351023,
			"name": "Filter",
			"description": "- **{{start}}** _{Integer}_ offset to start results from\n\n- **{{count}}** _{Integer}_ number of results\n\n- **{{name}}** _{String}_ team name\n\n- **{{sportId}}** _{Integer}_ sport ID\n\n- **{{schoolId}}** _{Integer}_ school ID\n\n- **{{schoolName}}** _{String}_ school name\n\n- **{{leagueId}}** _{Integer}_ league ID\n\n- **{{leagueName}}** _{String}_ league name\n\n- **{{rosterId}}** _{Integer}_ roster ID\n\n- **{{noRoleTypeId}}** _{Integer}_ role type ID\n\n- **{{noRoleUserId}}** _{Integer}_ user ID\n\n- **{{teamIds}}** _{Integers}_ comma delimited list of team ID's\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "7f51db11-dbf0-2304-9dd7-793a30fc9549",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/players?start={{start}}&count={{count}}&firstName={{firstName}}&lastName={{lastName}}&rosterId={{rosterId}}&reelId={{reelId}}&userId={{userId}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar name = postman.getEnvironmentVariable(\"name\");\nif (!name) postman.setEnvironmentVariable(\"name\", '');\n\nvar gender = postman.getEnvironmentVariable(\"gender\");\nif (!gender) postman.setEnvironmentVariable(\"gender\", 'male');\n\nvar sportId = postman.getEnvironmentVariable(\"sportId\");\nif (!sportId) postman.setEnvironmentVariable(\"sportId\", 1);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421587777941,
			"name": "Filter",
			"description": "- **{{start}}** _{Integer}_ offset to start results from\n\n- **{{count}}** _{Integer}_ number of results\n\n- **{{firstName}}** _{String}_ first name\n\n- **{{lastName}}** _{String}_ first name\n\n- **{{rosterId}}** _{Integer}_ roster ID\n\n- **{{reelId}}** _{Integer}_ reel ID\n\n- **{{userId}}** _{Integer}_ user ID\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "82cf0866-9d1f-2416-f225-0d14c418f8bd",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/filter-sets",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var filterSetSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"FilterSet Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"filters\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"filter\" }\n        },\n        \"categories\": {\n            \"type\": \"array\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\nvar filterSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Filter Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"filterCategoryId\": {\n            \"type\": \"integer\"\n        },\n        \"filterSetId\": {\n            \"type\": \"integer\"\n        },\n        \"associatePlayer\": {\n            \"type\": \"boolean\"\n        },\n        \"parent\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"children\": {\n            \"type\": \"array\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\ntv4.addSchema('filter', filterSchema);\n\nvar filtersets = JSON.parse(responseBody);\n\ntests[\"Filter-Sets conform to schema\"] = filtersets.every(function(filterset) {\n\n    return tv4.validate(filterset, filterSetSchema);\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420397318395,
			"name": "Query",
			"description": "Get all availabe filter sets.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "8bb56284-16f8-9770-77d7-33b0871a7543",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/position-sets/{{positionSetId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1400173067934,
			"name": "Get",
			"description": "Retrieve a single position set object.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "93cb83b9-614e-a548-b369-47deff24bcad",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/sports/{{sportId}}",
			"preRequestScript": "var sportId = postman.getEnvironmentVariable(\"sportId\");\nif (!sportId) postman.setEnvironmentVariable(\"sportId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var sport = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"sportId\", sport.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438945817,
			"name": "Get",
			"description": "Retrieve a single sport object.\n\n_{{sportId}}_ is a sport ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "93e742eb-b148-36f0-925e-96efa25ec1b3",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/games/{{gameId}}",
			"preRequestScript": "var gameId = postman.getEnvironmentVariable(\"gameId\");\nif (!gameId) postman.setEnvironmentVariable(\"gameId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var game = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"gameId\", game.id);\n\nvar gameSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Game Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"datePlayed\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"gameType\": {\n            \"type\": \"integer\"\n        },\n        \"isHomeGame\": {\n            \"type\": \"boolean\"\n        },\n        \"teamId\": {\n            \"type\": \"integer\"\n        },\n        \"opposingTeamId\": {\n            \"type\": \"integer\"\n        },\n        \"primaryJerseyColor\": {\n            \"type\": \"string\"\n        },\n        \"opposingPrimaryJerseyColor\": {\n            \"type\": \"string\"\n        },\n        \"opposingSecondaryJerseyColor\": {\n            \"type\": \"string\"\n        },\n        \"finalScore\": {\n            \"type\": \"integer\"\n        },\n        \"opposingFinalScore\": {\n            \"type\": \"integer\"\n        },\n        \"rosters\": { \"$ref\": \"roster\" },\n        \"video\": { \"$ref\": \"video\" },\n        \"status\": {\n            \"type\": \"integer\"\n        },\n        \"indexerAssignments\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"indexerAssignment\" }\n        },\n        \"isDeleted\": {\n            \"type\": \"boolean\"\n        },\n        \"uploaderUserId\": {\n            \"type\": \"integer\"\n        },\n        \"uploaderTeamId\": {\n            \"type\": \"integer\"\n        },\n        \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"isClone\": {\n            \"type\": \"boolean\"\n        },\n        \"notes\": {\n            \"patternProperties\": {\n                \"[12345]\": {\n                    \"type\": \"array\",\n                    \"items\": { \"$ref\": \"note\" }\n                }\n            }\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar rosterSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Roster Schema\",\n    \"type\": \"object\",\n    \"patternProperties\": {\n        \"[0-9]\": {\n            \"id\": {\n                \"type\": \"integer\"\n            },\n            \"geamId\": {\n                \"type\": \"integer\"\n            },\n            \"teamId\": {\n                \"type\": \"integer\"\n            },\n            \"playerInfo\": {\n                \"type\": \"object\",\n                \"patternProperties\": {\n                    \"[0-9]\": {\n                        \"jerseyNumber\": {\n                            \"type\": [\"integer\", \"string\"]\n                        },\n                        \"isActive\": {\n                            \"type\": \"boolean\"\n                        },\n                        \"positionIds\": {\n                            \"type\": \"array\",\n                            \"items\": \"integer\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar indexerAssignmentSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Indexer Assignment Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"gameId\": {\n            \"type\": \"integer\"\n        },\n        \"userId\": {\n            \"type\": \"integer\"\n        },\n        \"timeAssigned\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"timeStarted\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"timeFinished\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"deadline\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"isQa\": {\n            \"type\": \"boolean\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar noteSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Note Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"noteTypeId\": {\n            \"type\": \"integer\"\n        },\n        \"geamId\": {\n            \"type\": \"integer\"\n        },\n        \"content\": {\n            \"type\": \"string\"\n        },\n        \"gameTime\": {\n            \"type\": [\"integer\", \"null\"]\n        }\n    }\n}\n\nvar videoSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Video Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"guid\": {\n            \"type\": \"string\"\n        },\n        \"status\": {\n            \"type\": \"integer\"\n        },\n        \"videoTranscodeProfiles\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"transcodeProfile\" }\n        },\n        \"duration\": {\n            \"type\": \"integer\"\n        },\n        \"thumbnail\": {\n            \"type\": \"string\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar transcodeProfileSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Video Transcode Profile Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"videoId\": {\n            \"type\": \"integer\"\n        },\n        \"transcodeProfile\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"targetBitrate\": {\n                    \"type\": \"integer\"\n                },\n                \"maximumBitrate\": {\n                    \"type\": \"integer\"\n                },\n                \"minimumBitrate\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"targetDisplayWidth\": {\n                    \"type\": \"integer\"\n                },\n                \"targetDisplayHeight\": {\n                    \"type\": \"integer\"\n                },\n                \"aspectRatio\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"status\": {\n            \"type\": \"integer\"\n        },\n        \"videoUrl\": {\n            \"type\": \"string\"\n        },\n    },\n    \"additionalProperties\": false\n}\n\n\ntv4.addSchema('note', noteSchema);\ntv4.addSchema('video', videoSchema);\ntv4.addSchema('roster', rosterSchema);\ntv4.addSchema('transcodeProfile', transcodeProfileSchema);\ntv4.addSchema('indexerAssignment', indexerAssignmentSchema);\n          \ntv4.addFormat('date-time', function(data, schema) {\n\n    var ISO8601 = /[0-9]{4,}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+|)(?:[+-][0-9]{2}:[0-9]{2}|Z)/;\n\n    if (ISO8601.test(data) && !isNaN(Date.parse(data))) return null;\n\n    else return 'A valid ISO 8601 date/time string expected';\n});\n\n\nvar game = JSON.parse(responseBody);\n\ntests[\"Game conforms to schema\"] = tv4.validate(game, gameSchema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421547645436,
			"name": "Get",
			"description": "Endpoint used to retrieve a single game based on ID.\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "9cec257b-7c5c-ad4f-b69b-5e0d70d77cb0",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/plays",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"gameId\", data.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420429984133,
			"name": "Create",
			"description": "Add a new play.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"startTime\": 0,\n  \"endTime\": 0,\n  \"events\": [{\n      \"time\": 0,\n      \"tagId\": 16,\n      \"playId\": 1,\n\t  \"variableValues\":{\n    \t\"7\":{\n    \t\t\"id\":7,\n    \t\t\"type\":null,\n    \t\t\"value\":\"1\"\n    \t}\n      }\n  }],\n  \"gameId\": 1\n}"
		},
		{
			"id": "9ea9150a-eb07-0484-938c-bd4e85b1f3d9",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/users?start={{start}}&count={{count}}&email={{email}}&firstName={{firstName}&lastName={{lastName}}&role={{roleTypeId}}&hasNoRoles={{userId}}&isLocked={{isLocked}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar email = postman.getEnvironmentVariable(\"email\");\nif (!email) postman.setEnvironmentVariable(\"email\", '');\n\nvar firstName = postman.getEnvironmentVariable(\"firstName\");\nif (!firstName) postman.setEnvironmentVariable(\"firstName\", '');\n\nvar lastName = postman.getEnvironmentVariable(\"lastName\");\nif (!lastName) postman.setEnvironmentVariable(\"lastName\", '');\n\nvar roleTypeId = postman.getEnvironmentVariable(\"roleTypeId\");\nif (!roleTypeId) postman.setEnvironmentVariable(\"roleTypeId\", 1);\n\nvar userId = postman.getEnvironmentVariable(\"userId\");\nif (!userId) postman.setEnvironmentVariable(\"userId\", 1);\n\nvar isLocked = postman.getEnvironmentVariable(\"isLocked\");\nif (!isLocked) postman.setEnvironmentVariable(\"isLocked\", false);\n\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439631203,
			"name": "Filter",
			"description": "",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "a8f80424-bcc1-0d48-34e9-aefd879d1e47",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/schools",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438691205,
			"name": "Query",
			"description": "Get all schools.\n",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "a99c9759-3703-d756-80ec-8976f3a810fb",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/plans/{{planId}}",
			"preRequestScript": "var planId = postman.getEnvironmentVariable(\"planId\");\nif (!planId) postman.setEnvironmentVariable(\"planId\", 5);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var plan = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"planId\", plan.id);\n\nvar planSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Plan Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"leagueIds\": {\n            \"type\": \"array\",\n            \"items\": \"integer\"\n        },\n        \"startDay\": {\n            \"type\": \"integer\"\n        },\n        \"startMonth\": {\n            \"type\": \"integer\"\n        },\n        \"endDay\": {\n            \"type\": \"integer\"\n        },\n        \"endMonth\": {\n            \"type\": \"integer\"\n        },\n        \"maxGamesPerPlan\": {\n            \"type\": \"integer\"\n        },\n        \"maxAnyGames\": {\n            \"type\": \"integer\"\n        },\n        \"maxTurnaroundTime\": {\n            \"type\": \"integer\"\n        },\n        \"price\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar plan = JSON.parse(responseBody);\n\ntests[\"Plan conforms to schema\"] = tv4.validate(plan, planSchema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421586820022,
			"name": "Get",
			"description": "Endpoint used to retrieve a single plan based on ID.\n\n- **{{planId}}** _{Integer}_ the ID of the default plan to get.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "b97fc61c-0854-ab11-8ac3-d8958a25d768",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/tag-sets",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var tagSetSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"TagSet Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"tags\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"tag\" }\n        }\n    },\n    \"additionalProperties\": false\n};\n\nvar tagSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Tag Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"description\": {\n            \"type\": \"string\"\n        },\n        \"shortcutKey\": {\n            \"type\": \"string\"\n        },      \n        \"userScript\": {\n            \"type\": [\"string\", \"null\"]\n        },\n        \"indexerScript\": {\n            \"type\": \"string\"\n        },\n        \"summaryScript\": {\n            \"type\": [\"string\", \"null\"]\n        },\n        \"summaryPriority\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"pointsAssigned\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"assignThisTeam\": {\n            \"type\": [\"boolean\", \"null\"]\n        },\n        \"buffer\": {\n            \"type\": [\"number\", \"null\"]\n        },\n        \"isStart\": {\n            \"type\": \"boolean\"\n        },\n        \"isEnd\": {\n            \"type\": \"boolean\"\n        },\n        \"isPeriodTag\": {\n            \"type\": \"boolean\"\n        },\n        \"tagSetId\": {\n            \"type\": \"integer\"\n        },\n        \"children\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"integer\" }\n        },\n        \"tagVariables\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"tagVariable\" }\n        }\n    },\n    \"additionalProperties\": false\n};\n\nvar tagVariableSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Tag Variable Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"type\": {\n            \"type\": \"string\"\n        },\n        \"isRequired\": {\n            \"type\": \"boolean\"\n        },\n        // FIXME: tag.tagVariable.options should never be a string\n        \"options\": {\n            \"type\": [\"array\", \"string\"]\n        },\n        \"formations\": {\n            \"type\": \"array\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\ntv4.addSchema('tag', tagSchema);\ntv4.addSchema('tagVariable', tagVariableSchema);\n\nvar tagsets = JSON.parse(responseBody);\n\ntests[\"Tag-Sets conform to schema\"] = tagsets.every(function(tagset) {\n\n    return tv4.validate(tagset, tagSetSchema);\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420401830413,
			"name": "Query",
			"description": "Get all availabe tag sets.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "bb72a67f-8362-248e-6070-a4a122e4a24b",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/leagues",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var leagueSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"League Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"sportId\": {\n            \"type\": \"integer\"\n        },\n        \"gender\": {\n            \"type\": \"string\",\n            \"options\": [\n                \"male\",\n                \"female\"\n            ]\n        },\n        \"seasonStartMonth\": {\n            \"type\": \"integer\"\n        },\n        \"seasonStartDay\": {\n            \"type\": \"integer\"\n        },\n        \"seasonEndMonth\": {\n            \"type\": \"integer\"\n        },\n        \"seasonEndDay\": {\n            \"type\": \"integer\"\n        },\n        \"seasons\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"season\" }\n        },\n        \"tagSetId\": {\n            \"type\": \"integer\"\n        },\n        \"numberOfPeriods\": {\n            \"type\": \"integer\"\n        },\n        \"periodLabel\": {\n            \"type\": \"string\"\n        },\n        \"periodAbbreviationLabel\": {\n            \"type\": \"string\"\n        },\n        \"positionSetId\": {\n            \"type\": \"integer\"\n        },\n        \"flagRuleSetId\": {\n            \"type\": \"integer\"\n        },\n        \"filterSetId\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\nvar seasonSchema =\n{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Season Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"leagueId\": {\n            \"type\": \"integer\"\n        },\n        \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        },\n        \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n        }\n    },\n    \"additionalProperties\": false\n}\n\ntv4.addSchema('season', seasonSchema);\n          \ntv4.addFormat('date-time', function(data, schema) {\n\n    var ISO8601 = /[0-9]{4,}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(?:\\.[0-9]+|)(?:[+-][0-9]{2}:[0-9]{2}|Z)/;\n\n    if (ISO8601.test(data) && !isNaN(Date.parse(data))) return null;\n\n    else return 'A valid ISO 8601 date/time string expected';\n});\n\n\nvar leagues = JSON.parse(responseBody);\n\ntests[\"Leagues conform to schema\"] = leagues.every(function(league) {\n\n    return tv4.validate(league, leagueSchema);\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421556174835,
			"name": "Query",
			"description": "Endpoint used to get all leagues and to search for leagues using Query String filters.  If no filters are passed, it will return an array of all leagues.  Start and Count  are used to control how many results are returned and from what offset.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "c5980857-810f-1202-84be-03031e26f73d",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/games",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var league = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"leagueId\", league.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421553114766,
			"name": "Create",
			"description": "Add a new game",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n  \"datePlayed\":\"2013-11-15T23:00:00+00:00\",\n  \"gameType\":1,\n  \"isHomeGame\":false,\n  \"teamId\":2,\n  \"opposingTeamId\":3,\n  \"primaryJerseyColor\":\"#ffff00\",\n  \"opposingPrimaryJerseyColor\":\"#804040\",\n  \"opposingSecondaryJerseyColor\":\"#ffffff\",\n  \"finalScore\":2,\n  \"opposingFinalScore\":3,\n  \"isDeleted\":false,\n  \"uploaderUserId\":13,\n  \"uploaderTeamId\":2,\n  \"createdAt\":\"2014-07-14T20:54:45+00:00\",\n  \"isClone\":false,\n  \"notes\":{}\n}"
		},
		{
			"id": "d00f202b-574e-bf86-d41d-9f6314a750b8",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/leagues",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var league = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"leagueId\", league.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420428108364,
			"name": "Create",
			"description": "Add a new league",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\n\"name\":\"TEST\",\n\"sportId\":1,\n\"gender\":\"male\",\n\"seasonStartMonth\":8,\n\"seasonStartDay\":1,\n\"seasonEndMonth\":2,\n\"seasonEndDay\":1,\n\"tagSetId\":1,\n\"numberOfPeriods\":1,\n\"periodLabel\":\"Set\",\n\"periodAbbreviationLabel\":\"Set\",\n\"positionSetId\":1,\n\"flagRuleSetId\":1,\n\"filterSetId\":1\n}"
		},
		{
			"id": "d94e27d1-49c8-77e2-2f34-7021b0aa35ad",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/users/{{userId}}",
			"preRequestScript": "var userId = postman.getEnvironmentVariable(\"userId\");\nif (!userId) postman.setEnvironmentVariable(\"userId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420439470821,
			"name": "Update",
			"description": "Update an existing user.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"firstName\":\"Krossover\",\"lastName\":\"Super Admin\",\"roles\":[{\"userId\":1,\"type\":1,\"isDefault\":true,\"createdAt\":\"2014-07-01T13:28:06+00:00\"}],\"email\":\"superadmin@krossover.com\",\"isLocked\":false,\"lastAccessed\":\"2015-01-05T01:30:48+00:00\"}"
		},
		{
			"id": "e6217d79-5a03-131f-f0d8-2f2c56d3781a",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/plays?gameId={{gameId}}&reelId={{reelId}}",
			"preRequestScript": "var start = postman.getEnvironmentVariable(\"start\");\nif (!start) postman.setEnvironmentVariable(\"start\", 0);\n\nvar count = postman.getEnvironmentVariable(\"count\");\nif (!count) postman.setEnvironmentVariable(\"count\", 100);\n\nvar gameId = postman.getEnvironmentVariable(\"gameId\");\nif (!gameId) postman.setEnvironmentVariable(\"gameId\", 1);\n\nvar reelId = postman.getEnvironmentVariable(\"reelId\");\nif (!reelId) postman.setEnvironmentVariable(\"reelId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420430126443,
			"name": "Query",
			"description": "Get all plays.\n\n_{gameId}_ is a game ID\n\n_{reelId}_ is a reel ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "e694952f-d019-f211-a976-333401f477bb",
			"headers": "Authorization: Bearer {{access_token}}\nContent-Type: application/json\n",
			"url": "{{url}}/{{version}}/leagues/{{leagueId}}",
			"preRequestScript": "var leagueId = postman.getEnvironmentVariable(\"leagueId\");\nif (!leagueId) postman.setEnvironmentVariable(\"leagueId\", 1);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420427819934,
			"name": "Update",
			"description": "Update an existing league.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false,
			"rawModeData": "{\"id\":1,\"name\":\"Girls HS Volleyball\",\"sportId\":4,\"gender\":\"female\",\"seasonStartMonth\":8,\"seasonStartDay\":1,\"seasonEndMonth\":2,\"seasonEndDay\":1,\"seasons\":[{\"id\":3,\"startDate\":\"2014-08-01T00:00:00+00:00\",\"endDate\":\"2015-02-01T22:59:59+00:00\",\"leagueId\":1}],\"tagSetId\":1,\"numberOfPeriods\":5,\"periodLabel\":\"Set\",\"periodAbbreviationLabel\":\"Set\",\"positionSetId\":1,\"flagRuleSetId\":1,\"filterSetId\":1}"
		},
		{
			"id": "ec4a2f5f-8de1-3676-8445-5054e0b56dfa",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/filter-sets/{{filterSetId}}",
			"preRequestScript": "var filterSetId = postman.getEnvironmentVariable(\"filterSetId\");\nif (!filterSetId) postman.setEnvironmentVariable(\"filterSetId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\n\npostman.setEnvironmentVariable(\"filterSetId\", data.id);\n\nvar filterSetSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"FilterSet Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"filters\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"filter\" }\n        },\n        \"categories\": {\n            \"type\": \"array\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\nvar filterSchema = {\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Filter Schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"id\": {\n            \"type\": \"integer\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"filterCategoryId\": {\n            \"type\": \"integer\"\n        },\n        \"filterSetId\": {\n            \"type\": \"integer\"\n        },\n        \"associatePlayer\": {\n            \"type\": \"boolean\"\n        },\n        \"parent\": {\n            \"type\": [\"integer\", \"null\"]\n        },\n        \"children\": {\n            \"type\": \"array\"\n        }\n    },\n    \"additionalProperties\": false\n};\n\ntv4.addSchema('filter', filterSchema);\n\nvar filterset = JSON.parse(responseBody);\n\ntests[\"Filter-Set conforms to schema\"] = tv4.validate(filterset, filterSetSchema);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1421534531220,
			"name": "Get",
			"description": "Retrieve a single filter set object.",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		},
		{
			"id": "eedc99b9-d0b2-9c4e-15be-1a93dcc3c24b",
			"headers": "Authorization: Bearer {{access_token}}\n",
			"url": "{{url}}/{{version}}/schools/{{schoolId}}",
			"preRequestScript": "var schoolId = postman.getEnvironmentVariable(\"schoolId\");\nif (!schoolId) postman.setEnvironmentVariable(\"schoolId\", 1);",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var school = JSON.parse(responseBody);\n\npostman.setEnvironmentVariable(\"schoolId\", school.id);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1420438416505,
			"name": "Get",
			"description": "Retrieve a single school object.\n\n_{{schoolId}}_ is a school ID",
			"collectionId": "a986666f-c853-0902-2f9d-9800a54633e7",
			"responses": [],
			"synced": false
		}
	]
}